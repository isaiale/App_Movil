name: Flutter CI/CD Workflow

on:
  push:
    branches:
      - main
      - develop
      - pruebas
      - test
  pull_request:
    branches:
      - main
      - develop
      - pruebas
      - test
  workflow_dispatch: # Activación manual opcional

jobs:
  build:
    name: Build and Test Flutter MEF
    runs-on: ubuntu-latest

    steps:
    # 1. Clonar el repositorio
    - name: Checkout Repository
      uses: actions/checkout@v3

    # 2. Configurar Flutter
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'

    # 3. Cachear las dependencias de Flutter
    - name: Cache Flutter Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pub-
    
    # 4. Verify Flutter installation
    - name: Flutter Doctor
      run: flutter doctor

    # 5. Install dependencies
    - name: Install dependencies
      run: flutter pub get

    # 6. Generar mocks (si es necesario)
    - name: Generate mocks
      run: flutter pub run build_runner build --delete-conflicting-outputs

    # 7. Ejecutar pruebas específicas
    - name: Run Tests
      run: flutter test test/services/url_service_test.dart  
  
    # 8. Instalar Java 17 (requiere Java 17 para la compilación)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 9. Establecer JAVA_HOME a la ubicación de Java 17
    - name: Set JAVA_HOME for Gradle
      run: |
        echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
        echo "Path to JAVA_HOME: $JAVA_HOME"

    # 10. Compilar la aplicación Flutter (APK)
    - name: Build Flutter APK
      run: flutter build apk --release
      continue-on-error: true 

    # 11. Subir el APK como artefacto
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v3
      with:
        name: flutter-apk
        path: build/app/outputs/flutter-apk/app-release.apk
    
     # Job 2: Deploy to Firebase
  deploy:
    name: Deploy Flutter APK to Firebase
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Firebase CLI
      run: |
        curl -sL https://firebase.tools | bash
        firebase --version

    - name: Deploy to Firebase App Distribution
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}  # Asegúrate de agregar el token en los secrets
      run: |
        firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
          --app YOUR_FIREBASE_APP_ID \
          --groups "testers"  # Reemplaza con tu grupo de testers