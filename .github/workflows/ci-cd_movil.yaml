name: Flutter CI/CD Workflow

on:
  push:
    branches:
      - main
      - develop
      - pruebas
      - test
  pull_request:
    branches:
      - main
      - develop
      - pruebas
      - test
  workflow_dispatch: # Activación manual opcional

jobs:
  build:
    name: Build and Test Flutter MEF
    runs-on: ubuntu-latest

    steps:
    # 1. Clonar el repositorio
    - name: Checkout Repository
      uses: actions/checkout@v3

    # 2. Configurar Flutter
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'

    # 3. Cachear las dependencias de Flutter
    - name: Cache Flutter Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pub-
    
    # 4. Verify Flutter installation
    - name: Flutter Doctor
      run: flutter doctor

    # 5. Install dependencies
    - name: Install dependencies
      run: flutter pub get
    
    # 6. Instalar Java 17 (requiere Java 17 para la compilación)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 7. Establecer JAVA_HOME a la ubicación de Java 17
    - name: Set JAVA_HOME for Gradle
      run: |
        echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
        echo "Path to JAVA_HOME: $JAVA_HOME"

    # 8. Compilar la aplicación Flutter (APK)
    - name: Build Flutter APK
      run: flutter build apk --release
      #continue-on-error: true 

    # 9. Subir el APK como artefacto
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v3
      with:
        name: flutter-apk
        path: build/app/outputs/flutter-apk/app-release.apk


    # Notificación de éxito
    - name: Notify Success to Slack
      if: success()  # Solo se ejecuta si todo fue exitoso
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"¡Construcción y pruebas completadas con éxito!"}' \
        $SLACK_WEBHOOK_URL

    # Notificación de error
    - name: Notify Failure to Slack
      if: failure()  # Solo se ejecuta si algo falla
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"¡Error! Algo salió mal en el flujo de trabajo de Flutter. Revisa los detalles del error."}' \
        $SLACK_WEBHOOK_URL
    