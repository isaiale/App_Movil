androidx.profileinstaller.ProfileInstallReceiver
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants
androidx.lifecycle.ProcessLifecycleOwner
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
android.support.v4.graphics.drawable.IconCompatParcelizer
io.sentry.flutter.SentryFlutter$updateOptions$12
io.sentry.android.core.UserInteractionIntegration
io.sentry.android.core.AnrV2Integration
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
org.chromium.support_lib_boundary.ProfileBoundaryInterface
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2
io.sentry.android.ndk.NativeModuleListLoader
io.sentry.android.core.ScreenshotEventProcessor
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
io.sentry.flutter.SentryFlutter$updateOptions$10
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverterKt
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
io.sentry.flutter.SentryFlutterPlugin$BeforeSendCallbackImpl
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
androidx.lifecycle.ProcessLifecycleInitializer
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface
io.flutter.plugins.GeneratedPluginRegistrant
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$SpeculativeLoadingStatus
org.chromium.support_lib_boundary.PrefetchStatusCodeBoundaryInterface
io.flutter.view.TextureRegistry$SurfaceProducer
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
io.sentry.flutter.SentryFlutter$updateOptions$16
io.sentry.flutter.SentryFlutterReplayRecorder
io.sentry.flutter.SentryFlutter$updateOptions$3
androidx.annotation.Keep
io.sentry.flutter.SentryFlutterPluginKt
io.sentry.flutter.SentryFlutter$updateOptions$2
io.sentry.android.ndk.SentryNdk
androidx.window.extensions.core.util.function.Predicate
io.sentry.flutter.SentryFlutter$updateOptions$20
io.sentry.android.core.ActivityLifecycleIntegration
io.sentry.android.core.AppComponentsBreadcrumbsIntegration
androidx.core.app.RemoteActionCompat
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface
io.sentry.android.core.ViewHierarchyEventProcessor
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements
io.sentry.flutter.SentryFlutter$updateOptions$24
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1
io.flutter.view.TextureRegistry$SurfaceTextureEntry
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter$Companion
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
io.sentry.flutter.SentryFlutterKt
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface
io.sentry.flutter.SentryFlutterPlugin$Companion
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
io.sentry.flutter.SentryFlutter$updateOptions$8
androidx.window.extensions.core.util.function.Function
io.flutter.view.TextureRegistry$ImageTextureEntry
io.sentry.ShutdownHookIntegration
io.sentry.protocol.DebugImage
io.sentry.flutter.R
org.chromium.support_lib_boundary.StaticsBoundaryInterface
io.flutter.view.AccessibilityViewEmbedder
io.flutter.embedding.engine.FlutterJNI
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface
io.sentry.android.core.SentryPerformanceProvider
androidx.versionedparcelable.CustomVersionedParcelable
androidx.startup.InitializationProvider
io.sentry.flutter.SentryFlutter$updateOptions$5
androidx.webkit.WebViewClientCompat
io.sentry.android.core.PhoneStateBreadcrumbsIntegration
io.sentry.flutter.SentryFlutter$updateOptions$14
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface
io.sentry.android.core.SendCachedEnvelopeIntegration
androidx.core.app.RemoteActionCompatParcelizer
kotlin.internal.jdk8.JDK8PlatformImplementations
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants$ProcessGlobalConfigMapKey
androidx.core.graphics.drawable.IconCompat
io.sentry.android.core.ActivityBreadcrumbsIntegration
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
io.sentry.flutter.SentryFlutter$updateOptions$22
io.sentry.android.core.NetworkBreadcrumbsIntegration
io.sentry.flutter.SentryFlutter$updateOptions$27
io.flutter.view.TextureRegistry$ImageConsumer
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback
io.sentry.flutter.SentryFlutter$updateOptions$15
io.flutter.view.TextureRegistry$GLTextureConsumer
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
io.sentry.flutter.SentryFlutter$updateOptions$19
android.support.v4.app.RemoteActionCompatParcelizer
kotlin.internal.jdk7.JDK7PlatformImplementations
io.sentry.flutter.SentryFlutter
kotlin.jvm.functions.Function2
io.sentry.android.core.EnvelopeFileObserverIntegration$OutboxEnvelopeFileObserverIntegration
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
io.sentry.flutter.SentryFlutter$updateOptions$6
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
io.sentry.android.core.SentryAndroidOptions
io.sentry.flutter.SentryFlutter$updateOptions$17
androidx.profileinstaller.ProfileInstallerInitializer
io.sentry.flutter.SentryFlutter$updateOptions$25
io.sentry.flutter.SentryFlutter$updateOptions$26
io.sentry.android.core.EnvelopeFileObserverIntegration
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior
io.sentry.flutter.SentryFlutter$updateOptions$7
org.chromium.support_lib_boundary.PrefetchOperationResultBoundaryInterface
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
io.sentry.flutter.SentryFlutter$updateOptions$21
io.sentry.flutter.SentryFlutterPlugin
io.flutter.plugin.platform.SingleViewPresentation
androidx.lifecycle.DefaultLifecycleObserver
androidx.core.app.CoreComponentFactory
org.chromium.support_lib_boundary.PrefetchParamsBoundaryInterface
io.sentry.flutter.SentryFlutter$updateOptions$9
io.sentry.flutter.SentryFlutter$updateOptions$18
io.sentry.flutter.SentryFlutter$updateOptions$13
io.sentry.flutter.SentryFlutter$updateOptions$11
kotlinx.coroutines.android.AndroidDispatcherFactory
com.example.app_movil.MainActivity
io.sentry.android.core.CurrentActivityIntegration
io.sentry.android.core.AnrIntegration
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
io.sentry.android.replay.ReplayIntegration
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
io.sentry.android.core.TempSensorBreadcrumbsIntegration
androidx.window.extensions.core.util.function.Consumer
io.sentry.android.core.ApplicationNotResponding
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
io.flutter.embedding.engine.FlutterOverlaySurface
io.sentry.flutter.SentryFlutter$updateOptions$4
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements
io.sentry.android.ndk.NativeScope
io.sentry.UncaughtExceptionHandlerIntegration
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
kotlinx.coroutines.internal.StackTraceRecoveryKt
io.sentry.android.core.NdkIntegration
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
androidx.versionedparcelable.ParcelImpl
io.sentry.android.core.AppLifecycleIntegration
io.sentry.ILogger
androidx.core.view.ScrollingView
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
io.sentry.flutter.SentryFlutter$updateOptions$23
androidx.core.app.FrameMetricsAggregator
androidx.core.view.GestureDetectorCompat
androidx.core.graphics.drawable.IconCompatParcelizer
io.sentry.SpotlightIntegration
io.sentry.flutter.SentryFlutter$updateOptions$1
kotlin.coroutines.jvm.internal.BaseContinuationImpl
io.sentry.android.core.SystemEventsBreadcrumbsIntegration
io.flutter.view.FlutterCallbackInformation
kotlin.Function
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
io.sentry.SentryOptions: boolean enabled
io.sentry.SentryOptions: boolean enableUncaughtExceptionHandler
io.sentry.SentryOptions: int connectionTimeoutMillis
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.sentry.protocol.DebugImage: java.lang.String codeFile
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.IDebugImagesLoader debugImagesLoader
io.sentry.SentryOptions: java.lang.Double tracesSampleRate
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType Swipe
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality MEDIUM
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
io.sentry.SentryItemType: io.sentry.SentryItemType ReplayVideo
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: java.util.Map supportedNetworkData
kotlin.jvm.internal.Lambda: int arity
io.sentry.SpanStatus: io.sentry.SpanStatus UNAVAILABLE
io.sentry.SentryOptions: io.sentry.cache.IEnvelopeCache envelopeDiskCache
io.sentry.SentryItemType: io.sentry.SentryItemType Statsd
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType Focus
io.sentry.flutter.SentryFlutter$updateOptions$16: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: long maxAttachmentSize
io.sentry.SentryOptions: java.util.List optionsObservers
io.sentry.flutter.SentryFlutter$updateOptions$5: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: int profilingTracesHz
io.sentry.SentryOptions: io.sentry.protocol.SdkVersion sdkVersion
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource[] $VALUES
io.sentry.SentryOptions: io.sentry.clientreport.IClientReportRecorder clientReportRecorder
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport: int NONE
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BEGIN_OBJECT
io.sentry.SentryOptions: boolean enableTimeToFullDisplayTracing
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason RATELIMIT_BACKOFF
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize ALWAYS
io.sentry.flutter.SentryFlutter$updateOptions$20: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryLevel: io.sentry.SentryLevel[] $VALUES
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType[] $VALUES
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_OBJECT
io.sentry.SpanStatus: io.sentry.SpanStatus INTERNAL_ERROR
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType BUFFER
androidx.datastore.preferences.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType Gauge
androidx.datastore.preferences.PreferencesProto$Value: int STRING_SET_FIELD_NUMBER
io.sentry.SpanStatus: io.sentry.SpanStatus UNKNOWN_ERROR
io.sentry.SentryOptions: boolean enableShutdownHook
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType[] $VALUES
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.PreferencesProto$Value DEFAULT_INSTANCE
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType[] $VALUES
io.sentry.SentryOptions: boolean enableMetrics
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendTransactionCallback beforeSendTransaction
io.sentry.SentryOptions: long flushTimeoutMillis
io.sentry.SentryOptions: boolean enableAutoSessionTracking
io.sentry.DataCategory: io.sentry.DataCategory Security
androidx.datastore.preferences.protobuf.AbstractMessageLite: int memoizedHashCode
io.sentry.protocol.DebugImage: java.lang.String JVM
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
io.sentry.flutter.SentryFlutter: boolean autoPerformanceTracingEnabled
kotlinx.coroutines.sync.MutexImpl: java.lang.Object owner
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
io.sentry.android.core.SentryAndroidOptions: boolean enableActivityLifecycleTracingAutoFinish
io.sentry.SentryOptions: java.lang.String distinctId
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeEnvelopeCallback beforeEnvelopeCallback
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource VIEW
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType Unknown
io.sentry.protocol.DebugImage: java.lang.String type
io.sentry.SentryLevel: io.sentry.SentryLevel WARNING
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: kotlin.Lazy snakecasePattern$delegate
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType COLD
io.sentry.protocol.DebugImage: java.lang.String debugFile
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$SpeculativeLoadingStatus: int DISABLED
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource URL
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image image
io.sentry.flutter.SentryFlutter$updateOptions$15: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MILLISECOND
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverterKt: int MAX_PATH_ITEMS
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize[] $VALUES
io.sentry.SentryOptions: io.sentry.util.LazyEvaluator envelopeReader
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
io.sentry.SentryOptions: io.sentry.IConnectionStatusProvider connectionStatusProvider
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader lastReaderDequeuedFrom
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize MEDIUM
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus: int DISABLED
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.sentry.protocol.DebugImage: java.util.Map unknown
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
io.sentry.SpanStatus: io.sentry.SpanStatus FAILED_PRECONDITION
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: java.util.HashSet supportedNetworkData
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource CustomElement
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
io.sentry.android.core.SentryAndroidOptions: boolean enableAppComponentBreadcrumbs
io.sentry.android.core.SentryAndroidOptions: boolean attachScreenshot
io.sentry.metrics.MetricType: java.lang.String statsdCode
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.Object lock
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
io.sentry.SentryOptions: java.util.List viewHierarchyExporters
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize SMALL
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean released
io.sentry.SentryOptions: boolean traceSampling
io.sentry.DataCategory: io.sentry.DataCategory Monitor
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason BACKPRESSURE
io.flutter.embedding.engine.FlutterJNI: float displayDensity
io.sentry.SentryOptions: java.lang.String dsnHash
io.sentry.SpanStatus: io.sentry.SpanStatus[] $VALUES
io.sentry.DataCategory: io.sentry.DataCategory Attachment
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.String TAG
io.sentry.SentryReplayOptions$SentryReplayQuality: int bitRate
io.sentry.SentryOptions: java.lang.String release
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource StyleSheetRule
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus UNKNOWN
io.sentry.DataCategory: io.sentry.DataCategory Replay
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedWidth
io.sentry.protocol.DebugImage: java.lang.String uuid
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Scroll
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource[] $VALUES
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus[] $VALUES
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
io.sentry.flutter.SentryFlutterPlugin: io.sentry.flutter.SentryFlutter sentryFlutter
io.sentry.SpanStatus: int maxHttpStatusCode
io.sentry.flutter.SentryFlutter$updateOptions$26: io.sentry.android.core.SentryAndroidOptions $options
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String CACHE_DIRECTORY_BASE_PATH
io.flutter.embedding.engine.FlutterJNI: float displayHeight
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality HIGH
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int WEB_SOURCE_AND_WEB_TRIGGER
io.sentry.SentryOptions: boolean enableUserInteractionBreadcrumbs
io.sentry.android.core.SentryAndroidOptions: boolean attachViewHierarchy
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.PreferencesProto$PreferenceMap DEFAULT_INSTANCE
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration DAY
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean CLEANUP_ON_MEMORY_PRESSURE
io.sentry.SentryItemType: io.sentry.SentryItemType Transaction
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
io.sentry.android.core.SentryAndroidOptions: boolean collectAdditionalContext
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType ContextMenu
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason NETWORK_ERROR
io.sentry.SpanStatus: io.sentry.SpanStatus NOT_FOUND
io.sentry.flutter.SentryFlutterPlugin: io.flutter.plugin.common.MethodChannel channel
io.sentry.SentryLevel: io.sentry.SentryLevel INFO
io.sentry.android.core.SentryAndroidOptions: java.lang.String nativeSdkName
io.sentry.SentryOptions: java.lang.Double sampleRate
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus NO_PERMISSION
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
io.sentry.SentryLevel: io.sentry.SentryLevel DEBUG
io.sentry.SentryItemType: io.sentry.SentryItemType[] $VALUES
io.sentry.android.ndk.SentryNdk: java.util.concurrent.CountDownLatch loadLibraryLatch
io.sentry.android.core.SentryAndroidOptions: boolean anrReportInDebug
io.sentry.SentryOptions: io.sentry.SentryOptions$ProfilesSamplerCallback profilesSampler
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType Counter
io.sentry.SentryOptions: java.util.List tracePropagationTargets
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus DISCONNECTED
io.sentry.SentryItemType: io.sentry.SentryItemType Feedback
io.sentry.SentryItemType: io.sentry.SentryItemType CheckIn
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
io.sentry.SentryOptions: io.sentry.internal.debugmeta.IDebugMetaLoader debugMetaLoader
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback beforeViewHierarchyCaptureCallback
kotlin.SafePublicationLazyImpl: java.lang.Object _value
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
kotlinx.coroutines.CancelledContinuation: int _resumed
io.sentry.SentryItemType: io.sentry.SentryItemType ReplayRecording
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
io.sentry.protocol.DebugImage: java.lang.String debugId
io.sentry.android.core.SentryAndroidOptions: boolean enableSystemEventBreadcrumbs
io.sentry.DataCategory: io.sentry.DataCategory Unknown
io.sentry.flutter.SentryFlutter$updateOptions$19: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.android.core.SentryAndroidOptions: long anrTimeoutIntervalMillis
io.sentry.DataCategory: io.sentry.DataCategory UserReport
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
io.sentry.SentryOptions: long maxTraceFileSize
io.sentry.SpanStatus: io.sentry.SpanStatus ALREADY_EXISTS
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.protobuf.Parser PARSER
io.sentry.flutter.SentryFlutterPlugin$BeforeSendCallbackImpl: io.sentry.protocol.SdkVersion sdkVersion
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource CanvasMutation
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason BEFORE_SEND
io.sentry.SentryOptions: long sessionTrackingIntervalMillis
io.sentry.SpanStatus: io.sentry.SpanStatus UNKNOWN
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int APP_SOURCE_AND_APP_TRIGGER
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType MouseDown
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason QUEUE_OVERFLOW
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int DISABLED
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType Meta
kotlinx.coroutines.InvokeOnCancelling: int _invoked
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
io.sentry.SentryOptions: boolean enableScreenTracking
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type NO_DUMP
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
io.sentry.Session$State: io.sentry.Session$State[] $VALUES
io.sentry.SentryLevel: io.sentry.SentryLevel FATAL
io.sentry.flutter.SentryFlutter: java.lang.String nativeSdk
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType TouchCancel
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback beforeScreenshotCaptureCallback
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Font
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason[] $VALUES
io.sentry.DataCategory: io.sentry.DataCategory[] $VALUES
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
androidx.datastore.preferences.PreferencesProto$Value: int STRING_FIELD_NUMBER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource AdoptedStyleSheet
io.sentry.SentryItemType: io.sentry.SentryItemType Profile
io.sentry.android.core.SentryAndroidOptions: boolean enableNdk
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType Click
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
io.sentry.SentryOptions: java.lang.Boolean enableTracing
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType WARM
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MINUTE
io.sentry.SentryOptions: java.util.List eventProcessors
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration WEEK
io.sentry.android.core.SentryAndroidOptions: boolean enableNetworkEventBreadcrumbs
io.sentry.SentryOptions: boolean enablePrettySerializationOutput
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverterKt: int MAX_PATH_IDENTIFIER_LENGTH
io.sentry.flutter.SentryFlutter$updateOptions$21: io.sentry.flutter.SentryFlutter this$0
io.sentry.SentryOptions: io.sentry.ITransactionProfiler transactionProfiler
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Parser PARSER
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType[] $VALUES
io.sentry.flutter.SentryFlutterPluginKt: int APP_START_MAX_DURATION_MS
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
io.sentry.SentryOptions: boolean enableDefaultTagsForMetrics
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource TASK
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NUMBER
io.sentry.SpanStatus: io.sentry.SpanStatus DATA_LOSS
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
io.sentry.SentryOptions: io.sentry.SentryOptions$Proxy proxy
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus: int ENABLED
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
io.sentry.SentryOptions: io.sentry.ExperimentalOptions experimental
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Drag
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean trimOnMemoryPressure
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastDequeueTime
io.sentry.SentryOptions: long shutdownTimeoutMillis
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: int $stable
io.sentry.SentryOptions: io.sentry.Instrumenter instrumenter
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastScheduleTime
io.sentry.SentryOptions: java.lang.String dsn
io.sentry.android.core.SentryAndroidOptions: boolean enableAppLifecycleBreadcrumbs
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion Companion
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage lastDequeuedImage
io.sentry.android.core.SentryAndroidOptions: boolean reportHistoricalAnrs
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Input
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
io.sentry.flutter.SentryFlutter$updateOptions$12: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.DataCategory: io.sentry.DataCategory Error
io.sentry.SentryOptions: io.sentry.transport.ITransportGate transportGate
io.sentry.SentryOptions: boolean enableAppStartProfiling
io.sentry.SentryOptions: io.sentry.util.LazyEvaluator serializer
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
io.sentry.SentryOptions: int maxDepth
io.sentry.SentryOptions: java.util.Set ignoredExceptionsForType
io.sentry.flutter.SentryFlutter$updateOptions$3: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.Session$State: io.sentry.Session$State Exited
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality LOW
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeEmitMetricCallback beforeEmitMetricCallback
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource StyleDeclaration
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType[] $VALUES
io.sentry.flutter.SentryFlutter$updateOptions$10: io.sentry.android.core.SentryAndroidOptions $options
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.internal.util.SentryFrameMetricsCollector frameMetricsCollector
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType MouseUp
androidx.datastore.preferences.PreferencesProto$Value: int FLOAT_FIELD_NUMBER
io.sentry.DataCategory: io.sentry.DataCategory All
io.sentry.SentryOptions: java.lang.String DEFAULT_ENVIRONMENT
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
io.sentry.SpanStatus: io.sentry.SpanStatus INVALID_ARGUMENT
io.sentry.flutter.SentryFlutter$updateOptions$23: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: io.sentry.ISentryExecutorService executorService
io.sentry.SentryOptions: java.util.List integrations
io.sentry.flutter.SentryFlutter$updateOptions$6: io.sentry.android.core.SentryAndroidOptions $options
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
io.sentry.SentryOptions: boolean enableExternalConfiguration
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation[] $VALUES
io.sentry.DataCategory: io.sentry.DataCategory Transaction
androidx.datastore.preferences.protobuf.GeneratedMessageLite: androidx.datastore.preferences.protobuf.UnknownFieldSetLite unknownFields
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration NANOSECOND
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
io.sentry.flutter.SentryFlutter$updateOptions$22: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType[] $VALUES
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
io.sentry.SentryOptions: java.util.List performanceCollectors
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation PORTRAIT
io.sentry.SentryOptions: io.sentry.SentryOptions$Cron cron
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType TouchMove_Departed
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id
io.sentry.SentryOptions: boolean debug
io.sentry.SentryOptions: boolean printUncaughtStackTrace
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
io.sentry.SentryItemType: io.sentry.SentryItemType Event
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type SCROLLABLE
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport: int BROWSER
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String CONFIGURE_PARTITIONED_COOKIES
io.sentry.SentryOptions: long sessionFlushTimeoutMillis
io.sentry.SentryOptions: io.sentry.SentryLevel DEFAULT_DIAGNOSTIC_LEVEL
io.sentry.SpanStatus: io.sentry.SpanStatus UNIMPLEMENTED
io.sentry.SentryOptions: io.sentry.SentryLevel diagnosticLevel
io.sentry.SentryOptions: boolean enableDeduplication
io.sentry.SentryOptions: java.lang.String spotlightConnectionUrl
io.sentry.Session$State: io.sentry.Session$State Abnormal
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason SAMPLE_RATE
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
io.sentry.DataCategory: io.sentry.DataCategory Profile
io.sentry.SentryOptions: io.sentry.FullyDisplayedReporter fullyDisplayedReporter
io.sentry.flutter.SentryFlutter$updateOptions$24: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: boolean enableSpotlight
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean ignoringFence
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType TouchEnd
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
io.sentry.DataCategory: java.lang.String category
io.sentry.android.core.SentryAndroidOptions: long startupCrashFlushTimeoutMillis
kotlinx.coroutines.channels.BufferedChannel: long receivers
io.sentry.android.core.SentryAndroidOptions: boolean enableScopeSync
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback callback
io.sentry.SentryOptions: java.lang.String sentryClientName
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource CUSTOM
io.flutter.embedding.engine.FlutterOverlaySurface: int id
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
io.sentry.SentryOptions: boolean sendClientReports
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
io.sentry.flutter.SentryFlutter$updateOptions$9: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Mutation
io.sentry.android.core.SentryAndroidOptions: long startupCrashDurationThresholdMillis
io.sentry.SentryOptions: int readTimeoutMillis
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_STRING
io.sentry.SentryOptions: boolean traceOptionsRequests
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.sentry.android.core.SentryAndroidOptions: boolean enableActivityLifecycleBreadcrumbs
io.sentry.flutter.SentryFlutterReplayRecorder: io.sentry.android.replay.ReplayIntegration integration
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type CLICKABLE
io.sentry.SentryOptions: java.util.List defaultTracePropagationTargets
io.sentry.SentryOptions: javax.net.ssl.SSLSocketFactory sslSocketFactory
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.sentry.SentryOptions: boolean enableBackpressureHandling
io.sentry.SpanStatus: io.sentry.SpanStatus OUT_OF_RANGE
io.sentry.SpanStatus: int minHttpStatusCode
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
io.sentry.flutter.SentryFlutter$updateOptions$7: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Log
io.sentry.SentryOptions: java.util.List gestureTargetLocators
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType Distribution
io.sentry.hints.EventDropReason: io.sentry.hints.EventDropReason MULTITHREADED_DEDUPLICATION
io.sentry.SentryOptions: java.lang.String environment
io.sentry.SentryOptions: boolean enableScopePersistence
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType Set
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$SpeculativeLoadingStatus: int PRERENDER_ENABLED
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int memoizedSerializedSize
io.sentry.SentryOptions: boolean sendModules
io.sentry.SentryOptions: io.sentry.ITransportFactory transportFactory
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
io.sentry.SentryOptions: boolean attachStacktrace
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
io.sentry.SentryLevel: io.sentry.SentryLevel ERROR
io.sentry.SentryOptions: int maxQueueSize
io.sentry.flutter.SentryFlutter$updateOptions$18: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.hints.EventDropReason: io.sentry.hints.EventDropReason[] $VALUES
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
io.sentry.flutter.SentryFlutter$updateOptions$2: io.sentry.android.core.SentryAndroidOptions $options
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_BASE_PATH
io.sentry.flutter.SentryFlutter$updateOptions$27: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource MouseInteraction
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken STRING
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedHeight
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.datastore.preferences.PreferencesProto$Value: java.lang.Object value_
io.sentry.SentryOptions: int maxCacheItems
io.sentry.flutter.SentryFlutter: java.lang.String androidSdk
io.sentry.protocol.DebugImage: java.lang.Long imageSize
io.sentry.SentryOptions: java.util.List ignoredCheckIns
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
io.sentry.flutter.SentryFlutter$updateOptions$27: io.sentry.flutter.SentryFlutter this$0
io.sentry.SentryOptions: io.sentry.SentryOptions$TracesSamplerCallback tracesSampler
io.sentry.SentryOptions: boolean sendDefaultPii
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken[] $VALUES
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
io.sentry.Instrumenter: io.sentry.Instrumenter SENTRY
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration HOUR
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type ERROR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
io.sentry.flutter.SentryFlutter$updateOptions$13: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.flutter.SentryFlutterPlugin: java.lang.String FLUTTER_SDK
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize NONE
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
org.chromium.support_lib_boundary.PrefetchStatusCodeBoundaryInterface: int FAILURE
io.sentry.flutter.SentryFlutter$updateOptions$14: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.flutter.SentryFlutterPlugin: java.lang.String NATIVE_SDK
io.sentry.SentryOptions: java.lang.String DEFAULT_PROPAGATION_TARGETS
io.sentry.SentryOptions: java.util.Map tags
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation LANDSCAPE
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource MediaInteraction
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus CONNECTED
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason CACHE_OVERFLOW
io.sentry.android.core.SentryAndroidOptions: boolean anrEnabled
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
io.sentry.SentryOptions: boolean enableUserInteractionTracing
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_SUFFIX
io.sentry.SpanStatus: io.sentry.SpanStatus DEADLINE_EXCEEDED
io.sentry.protocol.DebugImage: java.lang.String PROGUARD
io.flutter.plugin.platform.SingleViewPresentation: int viewId
io.sentry.SpanStatus: io.sentry.SpanStatus CANCELLED
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_ARRAY
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int MAX_IMAGES
io.sentry.protocol.DebugImage: java.lang.String imageAddr
io.sentry.SentryOptions: java.util.List inAppExcludes
io.sentry.flutter.SentryFlutterPlugin: io.sentry.flutter.SentryFlutterPlugin$Companion Companion
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType Blur
io.sentry.SentryItemType: io.sentry.SentryItemType UserFeedback
io.sentry.DataCategory: io.sentry.DataCategory Session
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
io.sentry.android.core.SentryAndroidOptions: boolean enableRootCheck
androidx.datastore.preferences.PreferencesProto$Value: int bitField0_
org.chromium.support_lib_boundary.PrefetchStatusCodeBoundaryInterface: int SUCCESS
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_DOCUMENT
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType IncrementalSnapshot
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BOOLEAN
io.sentry.SentryOptions: io.sentry.util.LazyEvaluator dateProvider
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.Parser PARSER
io.sentry.SentryOptions: io.sentry.internal.modules.IModulesLoader modulesLoader
io.sentry.clientreport.DiscardReason: java.lang.String reason
androidx.datastore.preferences.PreferencesProto$PreferenceMap: int PREFERENCES_FIELD_NUMBER
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_ARRAY_BUFFER
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean newFrameAvailable
io.sentry.SpanStatus: io.sentry.SpanStatus ABORTED
io.sentry.SentryOptions: boolean enableSpanLocalMetricAggregation
io.sentry.SentryItemType: io.sentry.SentryItemType Session
androidx.datastore.preferences.PreferencesProto$StringSet: int STRINGS_FIELD_NUMBER
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.datastore.preferences.PreferencesProto$Value: int valueCase_
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
kotlinx.coroutines.DefaultExecutor: int debugStatus
io.sentry.DataCategory: io.sentry.DataCategory Span
io.sentry.Instrumenter: io.sentry.Instrumenter[] $VALUES
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType DblClick
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Internal$ProtobufList strings_
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource ROUTE
io.sentry.SentryReplayOptions$SentryReplayQuality: float sizeScale
io.sentry.flutter.SentryFlutterPlugin: io.sentry.android.replay.ReplayIntegration replay
kotlinx.coroutines.DispatchedCoroutine: int _decision
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
io.sentry.DataCategory: io.sentry.DataCategory Default
io.sentry.flutter.SentryFlutterPlugin: android.content.Context context
io.sentry.SentryOptions: io.sentry.util.LazyEvaluator parsedDsn
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean ignoringFence
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
io.sentry.SentryOptions: int maxSpans
io.sentry.SentryOptions: java.lang.Long idleTimeout
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType FullSnapshot
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.PreferencesProto$StringSet DEFAULT_INSTANCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: java.lang.String lastConnectivityState
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration SECOND
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean released
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource ViewportResize
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
io.sentry.SentryOptions: java.lang.String dist
io.sentry.flutter.SentryFlutter$updateOptions$25: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter$Companion Companion
io.sentry.android.core.SentryAndroidOptions: boolean enableFramesTracking
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1 INSTANCE
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int APP_SOURCE_AND_WEB_TRIGGER
io.sentry.flutter.SentryFlutterPlugin: long NATIVE_CRASH_WAIT_TIME
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType Click
io.sentry.SentryItemType: io.sentry.SentryItemType Attachment
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport: int APP
io.sentry.SpanStatus: io.sentry.SpanStatus UNAUTHENTICATED
io.sentry.SentryOptions: java.lang.String proguardUuid
androidx.datastore.preferences.PreferencesProto$Value: int DOUBLE_FIELD_NUMBER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type DUMP
androidx.datastore.preferences.PreferencesProto$Value: int LONG_FIELD_NUMBER
io.sentry.flutter.SentryFlutterPlugin: java.lang.ref.WeakReference activity
io.sentry.protocol.DebugImage: java.lang.String arch
io.sentry.SentryItemType: io.sentry.SentryItemType ClientReport
io.sentry.android.core.SentryAndroidOptions: boolean attachAnrThreadDump
io.sentry.flutter.SentryFlutterPlugin: io.sentry.android.core.ActivityFramesTracker framesTracker
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
io.sentry.SpanStatus: io.sentry.SpanStatus RESOURCE_EXHAUSTED
io.sentry.android.core.SentryAndroidOptions: boolean enablePerformanceV2
io.sentry.flutter.SentryFlutterPlugin: java.lang.Long pluginRegistrationTime
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType SESSION
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
io.sentry.SentryOptions: io.sentry.SentryOptions$RequestSize maxRequestBodySize
io.sentry.flutter.SentryFlutterReplayRecorder: io.flutter.plugin.common.MethodChannel channel
io.sentry.SentryOptions: int maxBreadcrumbs
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource COMPONENT
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource TouchMove
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
io.sentry.SentryItemType: io.sentry.SentryItemType ReplayEvent
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: java.lang.String TAG
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendCallback beforeSend
io.sentry.flutter.SentryFlutterPlugin: java.lang.String ANDROID_SDK
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
io.flutter.embedding.engine.FlutterJNI: float displayWidth
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastQueueTime
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
io.sentry.SpanStatus: io.sentry.SpanStatus OK
io.sentry.SentryOptions: java.util.List contextTags
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NAME
io.sentry.SentryOptions: boolean attachThreads
androidx.datastore.preferences.PreferencesProto$Value: int INTEGER_FIELD_NUMBER
io.sentry.SentryItemType: java.lang.String itemType
kotlinx.coroutines.CompletedExceptionally: int _handled
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MICROSECOND
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type[] $VALUES
io.sentry.SentryOptions: java.util.List observers
io.sentry.Instrumenter: io.sentry.Instrumenter OTEL
io.sentry.SentryOptions: boolean attachServerName
io.sentry.SentryOptions: io.sentry.ReplayController replayController
io.sentry.flutter.SentryFlutter$updateOptions$4: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: java.lang.String cacheDirPath
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType Load
io.sentry.SentryOptions: java.lang.Double profilesSampleRate
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.MapFieldLite preferences_
io.sentry.SentryOptions: io.sentry.TransactionPerformanceCollector transactionPerformanceCollector
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType Custom
io.sentry.flutter.SentryFlutter$updateOptions$17: io.sentry.android.core.SentryAndroidOptions $options
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus: int ENABLED_WITHOUT_APP_IDENTITY
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason EVENT_PROCESSOR
io.sentry.SentryOptions: io.sentry.ILogger logger
io.sentry.DataCategory: io.sentry.DataCategory MetricBucket
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType Scroll
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.sentry.flutter.SentryFlutter$updateOptions$8: io.sentry.android.core.SentryAndroidOptions $options
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.ArrayDeque imageReaderQueue
io.sentry.SentryOptions: java.util.List inAppIncludes
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeBreadcrumbCallback beforeBreadcrumb
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type[] $VALUES
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType UNKNOWN
io.sentry.SentryOptions: java.lang.String serverName
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
io.sentry.SentryOptions: java.util.Set bundleIds
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
io.sentry.flutter.SentryFlutter$updateOptions$1: io.sentry.android.core.SentryAndroidOptions $options
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean createNewReader
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType DomContentLoaded
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverterKt: double MILLIS_PER_SECOND
io.sentry.Session$State: io.sentry.Session$State Crashed
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean VERBOSE_LOGS
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.HashMap perImageReaders
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
io.sentry.android.core.SentryAndroidOptions: boolean enableAutoActivityLifecycleTracing
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
io.sentry.SentryItemType: io.sentry.SentryItemType Unknown
io.sentry.SentryOptions: io.sentry.backpressure.IBackpressureMonitor backpressureMonitor
kotlinx.coroutines.JobSupport: java.lang.Object _state
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
io.sentry.SentryOptions: io.sentry.util.thread.IMainThreadChecker mainThreadChecker
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality[] $VALUES
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration[] $VALUES
io.sentry.protocol.DebugImage: java.lang.String codeId
io.sentry.flutter.SentryFlutter$updateOptions$11: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BEGIN_ARRAY
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType Plugin
io.sentry.Session$State: io.sentry.Session$State Ok
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NULL
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: io.sentry.flutter.SentryFlutterPlugin this$0
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource MouseMove
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Selection
androidx.datastore.preferences.PreferencesProto$Value: int BOOLEAN_FIELD_NUMBER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims
io.sentry.SpanStatus: io.sentry.SpanStatus PERMISSION_DENIED
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType TouchStart
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
io.sentry.SentryOptions: void loadLazyFields()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
io.sentry.SentryLevel: io.sentry.SentryLevel[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void onDragEnd(boolean)
androidx.window.extensions.core.util.function.Consumer: void accept(java.lang.Object)
io.sentry.SentryOptions: void setMaxTraceFileSize(long)
io.sentry.android.core.SentryAndroidOptions: void setEnableNdk(boolean)
io.sentry.flutter.SentryFlutter$updateOptions$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.sentry.flutter.SentryFlutterKt: void getIfNotNull(java.util.Map,java.lang.String,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
io.flutter.view.TextureRegistry$ImageTextureEntry: long id()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
io.sentry.DataCategory: io.sentry.DataCategory[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType[] $values()
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
io.sentry.Session$State: io.sentry.Session$State[] values()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
io.sentry.Session$State: io.sentry.Session$State valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer)
io.sentry.flutter.SentryFlutterPlugin$Companion: SentryFlutterPlugin$Companion()
io.flutter.view.TextureRegistry$SurfaceProducer: long id()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
io.sentry.flutter.SentryFlutterPlugin$Companion: SentryFlutterPlugin$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ScrollingView: int computeHorizontalScrollOffset()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
io.sentry.SentryOptions: void setInstrumenter(io.sentry.Instrumenter)
io.sentry.android.core.SentryAndroidOptions: void setEnableAutoActivityLifecycleTracing(boolean)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
io.sentry.flutter.SentryFlutterPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.ndk.NativeScope: void nativeRemoveUser()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: java.util.List getAllProfileNames()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
io.sentry.SentryOptions: void setEnableDefaultTagsForMetrics(boolean)
io.sentry.SentryOptions: java.lang.Double getSampleRate()
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource[] $values()
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setSize(int,int)
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType[] $values()
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType[] values()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: io.sentry.android.replay.Recorder invoke()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onCreate(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
org.chromium.support_lib_boundary.PrefetchOperationResultBoundaryInterface: int getStatusCode()
io.sentry.SentryOptions: io.sentry.transport.ITransportGate getTransportGate()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setUserAgentMetadataFromMap(java.util.Map)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: int getType()
io.sentry.flutter.SentryFlutter$updateOptions$14: SentryFlutter$updateOptions$14(io.sentry.android.core.SentryAndroidOptions)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType[] values()
io.sentry.SentryOptions: java.lang.Long getIdleTimeout()
io.sentry.android.ndk.SentryNdk: void initSentryNative(io.sentry.android.core.SentryAndroidOptions)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
io.sentry.SentryOptions: void setSpotlightConnectionUrl(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
io.sentry.flutter.SentryFlutter$updateOptions$12: void invoke(int)
androidx.lifecycle.DefaultLifecycleObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
io.sentry.SentryOptions: void setEnableTracing(java.lang.Boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getWebViewMediaIntegrityApiDefaultStatus()
io.sentry.SentryOptions: io.sentry.SentryDateProvider getDateProvider()
io.sentry.protocol.DebugImage: java.lang.String access$502(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$17: SentryFlutter$updateOptions$17(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.view.Surface getSurface()
androidx.lifecycle.DefaultLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
io.sentry.SentryReplayEvent$ReplayType: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.SentryOptions: void setTracesSampler(io.sentry.SentryOptions$TracesSamplerCallback)
io.sentry.SentryOptions: void setBeforeEmitMetricCallback(io.sentry.SentryOptions$BeforeEmitMetricCallback)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
io.sentry.SentryOptions: boolean isEnableTimeToFullDisplayTracing()
io.sentry.flutter.SentryFlutterPlugin: void setContexts(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: double deltaMillis(long)
io.sentry.hints.EventDropReason: io.sentry.hints.EventDropReason[] $values()
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: io.sentry.rrweb.RRWebBreadcrumbEvent newRRWebBreadcrumb(io.sentry.Breadcrumb)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void waitOnFence(android.media.Image)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void cleanup()
io.sentry.SentryOptions: void setEnableDeduplication(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.sentry.flutter.SentryFlutter$updateOptions$6: SentryFlutter$updateOptions$6(io.sentry.android.core.SentryAndroidOptions)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void addRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
io.sentry.SentryOptions: void setModulesLoader(io.sentry.internal.modules.IModulesLoader)
io.sentry.SentryLevel: io.sentry.SentryLevel valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
io.sentry.flutter.SentryFlutter$updateOptions$9: SentryFlutter$updateOptions$9(io.sentry.android.core.SentryAndroidOptions)
io.sentry.Session$State: Session$State(java.lang.String,int)
io.sentry.flutter.SentryFlutter$updateOptions$22: SentryFlutter$updateOptions$22(io.sentry.android.core.SentryAndroidOptions)
io.sentry.flutter.SentryFlutter$updateOptions$22: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryOptions: void setSerializer(io.sentry.ISerializer)
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize[] values()
io.sentry.flutter.SentryFlutterPlugin: void removeExtra(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.CookieManager getCookieManager()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getHeight()
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeBreadcrumbCallback getBeforeBreadcrumb()
io.sentry.flutter.SentryFlutter$updateOptions$25: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.sentry.android.core.SentryAndroidOptions: void enableAllAutoBreadcrumbs(boolean)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
io.sentry.SentryOptions: void setBeforeSend(io.sentry.SentryOptions$BeforeSendCallback)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
io.sentry.android.core.SentryAndroidOptions: void setEnableFramesTracking(boolean)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.sentry.android.core.SentryAndroidOptions: boolean isAnrEnabled()
io.sentry.flutter.SentryFlutter$updateOptions$4: void invoke(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
io.sentry.flutter.SentryFlutterReplayRecorder: void resume$lambda$1(io.sentry.flutter.SentryFlutterReplayRecorder)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
io.sentry.SentryOptions: void setEnvelopeReader(io.sentry.IEnvelopeReader)
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration[] $values()
io.sentry.flutter.SentryFlutter$updateOptions$27: void invoke(java.util.Map)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setApi(io.flutter.plugins.webviewflutter.WebViewFlutterApiImpl)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProfileStore()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
androidx.window.layout.util.ContextCompatHelperApi30: androidx.core.view.WindowInsetsCompat currentWindowInsets(android.content.Context)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
io.sentry.SentryOptions: boolean isEnableBackpressureHandling()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
org.chromium.support_lib_boundary.PrefetchParamsBoundaryInterface: java.lang.String getNoVarySearchHint()
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor,boolean)
io.sentry.protocol.DebugImage: java.lang.String getUuid()
io.sentry.flutter.SentryFlutter: void setAutoPerformanceTracingEnabled(boolean)
androidx.lifecycle.ProcessLifecycleOwner: ProcessLifecycleOwner()
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
io.sentry.SentryOptions: java.util.List getPerformanceCollectors()
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
io.sentry.flutter.SentryFlutter$updateOptions$13: SentryFlutter$updateOptions$13(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback access$200(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void endRearDisplayPresentationSession()
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
io.sentry.flutter.SentryFlutter$updateOptions$18: void invoke(java.lang.String)
io.sentry.SentryOptions: long getSessionFlushTimeoutMillis()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback getBeforeScreenshotCaptureCallback()
io.sentry.SentryOptions: void setViewHierarchyExporters(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
io.sentry.android.core.EnvelopeFileObserverIntegration$OutboxEnvelopeFileObserverIntegration: EnvelopeFileObserverIntegration$OutboxEnvelopeFileObserverIntegration()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
io.sentry.SentryOptions: boolean isEnableDefaultTagsForMetrics()
io.sentry.flutter.SentryFlutter$updateOptions$18: SentryFlutter$updateOptions$18(io.sentry.android.core.SentryAndroidOptions)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.sentry.clientreport.DiscardReason: java.lang.String getReason()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
io.sentry.android.core.AnrV2Integration$ParseResult$Type: AnrV2Integration$ParseResult$Type(java.lang.String,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
io.sentry.SentryOptions: io.sentry.FullyDisplayedReporter getFullyDisplayedReporter()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.sentry.protocol.DebugImage: void setCodeId(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.sentry.flutter.SentryFlutter$updateOptions$15: java.lang.Object invoke(java.lang.Object)
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType[] $values()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableNdk()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.net.Uri cache(byte[],java.lang.String,java.lang.String)
io.sentry.SentryOptions: java.lang.Boolean getEnableTracing()
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
io.sentry.flutter.SentryFlutter$updateOptions$7: SentryFlutter$updateOptions$7(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions: void setFullyDisplayedReporter(io.sentry.FullyDisplayedReporter)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
io.sentry.SentryOptions: java.util.List getInAppIncludes()
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type[] values()
io.sentry.SentryOptions: void addTracingOrigin(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
io.sentry.flutter.SentryFlutter$updateOptions$3: void invoke(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void releaseInternal()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
io.sentry.SentryOptions: io.sentry.SentryOptions$TracesSamplerCallback getTracesSampler()
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onStart(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.sentry.flutter.SentryFlutterPlugin: void setContexts$lambda$6(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result,io.sentry.IScope)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onImage(android.media.ImageReader,android.media.Image)
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration[] values()
io.sentry.flutter.SentryFlutterReplayRecorder: void stop$lambda$3(io.sentry.flutter.SentryFlutterReplayRecorder)
io.sentry.SentryOptions: boolean isSendModules()
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: double doubleTimestamp(long)
io.sentry.SentryOptions: io.sentry.clientreport.IClientReportRecorder getClientReportRecorder()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertCookieManager(java.lang.Object)
io.sentry.flutter.SentryFlutter$updateOptions$2: void invoke(boolean)
io.flutter.view.TextureRegistry$GLTextureConsumer: android.graphics.SurfaceTexture getSurfaceTexture()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: java.lang.reflect.InvocationHandler getOrCreateProfile(java.lang.String)
androidx.window.extensions.core.util.function.Function: java.lang.Object apply(java.lang.Object)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
io.sentry.flutter.SentryFlutterPlugin: void removeContexts(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.flutter.SentryFlutter$updateOptions$19: SentryFlutter$updateOptions$19(io.sentry.android.core.SentryAndroidOptions)
io.sentry.android.core.SentryAndroidOptions: void setAttachScreenshot(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
io.sentry.SentryOptions: void setEnableAutoSessionTracking(boolean)
io.sentry.SentryOptions: void setProfilesSampleRate(java.lang.Double)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType[] values()
io.sentry.SentryOptions: boolean isSendDefaultPii()
io.sentry.flutter.SentryFlutterPlugin: void initNativeSdk$lambda$0(io.sentry.flutter.SentryFlutterPlugin,java.util.Map,io.sentry.android.core.SentryAndroidOptions)
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType[] $values()
io.sentry.flutter.SentryFlutter: SentryFlutter(java.lang.String,java.lang.String)
io.sentry.DataCategory: io.sentry.DataCategory[] $values()
io.sentry.protocol.DebugImage: java.lang.String access$402(io.sentry.protocol.DebugImage,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeEmitMetricCallback getBeforeEmitMetricCallback()
io.sentry.SentryOptions: void setConnectionStatusProvider(io.sentry.IConnectionStatusProvider)
io.sentry.SentryOptions: java.util.List getViewHierarchyExporters()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
io.sentry.SentryOptions: int getConnectionTimeoutMillis()
io.sentry.SentryOptions: void setDistinctId(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: FlutterRenderer$ImageTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
io.sentry.SentryItemType: io.sentry.SentryItemType resolve(java.lang.Object)
io.sentry.android.core.SentryAndroidOptions: long getStartupCrashDurationThresholdMillis()
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
io.sentry.flutter.SentryFlutterPlugin$Companion: void setEventEnvironmentTag(io.sentry.SentryEvent,java.lang.String,java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: SentryFlutterPlugin$initNativeSdk$2$2(io.sentry.flutter.SentryFlutterPlugin)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void release()
io.sentry.SentryOptions: void setBeforeEnvelopeCallback(io.sentry.SentryOptions$BeforeEnvelopeCallback)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
io.sentry.SentryOptions: void setPrintUncaughtStackTrace(boolean)
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void markDirty()
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator()
io.sentry.flutter.SentryFlutter$updateOptions$8: void invoke(long)
io.sentry.flutter.SentryFlutterReplayRecorder: void resume()
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
io.sentry.SentryOptions: boolean isEnableUserInteractionBreadcrumbs()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
io.sentry.SentryOptions: boolean isEnableSpotlight()
io.sentry.SentryOptions: boolean isTraceSampling()
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase valueOf(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: void setStartupCrashFlushTimeoutMillis(long)
io.sentry.SentryOptions: boolean isEnableDeduplication()
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType[] values()
io.sentry.SentryOptions: io.sentry.internal.debugmeta.IDebugMetaLoader getDebugMetaLoader()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: android.webkit.WebChromeClient getWebChromeClient()
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
io.sentry.flutter.SentryFlutterKt: void access$getIfNotNull(java.util.Map,java.lang.String,kotlin.jvm.functions.Function1)
io.sentry.flutter.SentryFlutter$updateOptions$20: SentryFlutter$updateOptions$20(io.sentry.android.core.SentryAndroidOptions)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void startRearDisplayPresentationSession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
io.sentry.flutter.SentryFlutterPlugin: void addBreadcrumb(java.util.Map,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.SentryOptions: void addInAppExclude(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode valueOf(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: void setFrameMetricsCollector(io.sentry.android.core.internal.util.SentryFrameMetricsCollector)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
io.sentry.DataCategory: java.lang.String getCategory()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
io.sentry.android.core.SentryAndroidOptions: long getStartupCrashFlushTimeoutMillis()
io.sentry.SentryOptions: io.sentry.ExperimentalOptions getExperimental()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
io.sentry.flutter.SentryFlutter$updateOptions$26: void invoke(java.util.Map)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: boolean deleteProfile(java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
io.sentry.SentryOptions: java.util.List getOptionsObservers()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setEnterpriseAuthenticationAppLinkPolicyEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.sentry.metrics.MetricType: MetricType(java.lang.String,int,java.lang.String)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
io.sentry.SentryOptions: boolean isEnableMetrics()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
io.sentry.SentryOptions: void setSendModules(boolean)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
io.sentry.SentryOptions: void setBeforeBreadcrumb(io.sentry.SentryOptions$BeforeBreadcrumbCallback)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWebauthnSupport(int)
io.sentry.flutter.SentryFlutter$updateOptions$23: java.lang.Object invoke(java.lang.Object)
io.sentry.android.core.SentryAndroidOptions: void setEnableActivityLifecycleTracingAutoFinish(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
io.sentry.SentryOptions: java.lang.String getSentryClientName()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.lifecycle.DefaultLifecycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel valueOf(java.lang.String)
io.sentry.protocol.DebugImage: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage()
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource[] values()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
io.sentry.vendor.gson.stream.JsonToken: JsonToken(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
io.sentry.android.core.SentryAndroidOptions: void setEnableAppLifecycleBreadcrumbs(boolean)
io.sentry.SentryItemType: io.sentry.SentryItemType[] $values()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.sentry.SentryOptions: long getSessionTrackingIntervalMillis()
io.sentry.SentryOptions: void setFlushTimeoutMillis(long)
io.sentry.flutter.SentryFlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.ServiceWorkerController getServiceWorkerController()
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter$Companion: SentryFlutterReplayBreadcrumbConverter$Companion()
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$502(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
io.sentry.SentryOptions: void setDist(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
io.sentry.flutter.SentryFlutterPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
io.sentry.flutter.SentryFlutterPlugin: io.sentry.android.replay.ReplayIntegration access$getReplay$p(io.sentry.flutter.SentryFlutterPlugin)
io.sentry.android.ndk.NativeModuleListLoader: io.sentry.protocol.DebugImage[] nativeLoadModuleList()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
io.sentry.SentryOptions: boolean isEnableAutoSessionTracking()
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.IDebugImagesLoader getDebugImagesLoader()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: java.lang.String getAsString()
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessageWithPayload(java.lang.reflect.InvocationHandler)
io.sentry.android.core.SentryAndroidOptions: void setEnableScopeSync(boolean)
io.sentry.flutter.SentryFlutter$updateOptions$17: void invoke(boolean)
io.sentry.SentryOptions: boolean isAttachStacktrace()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: FlutterRenderer$ImageReaderSurfaceProducer(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
io.sentry.SentryOptions: void setTag(java.lang.String,java.lang.String)
io.sentry.protocol.DebugImage: java.lang.String access$302(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void addToMap(io.sentry.android.core.performance.TimeSpan,java.util.Map)
androidx.core.view.ScrollingView: int computeHorizontalScrollExtent()
io.sentry.flutter.SentryFlutter$updateOptions$26: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeScheduleFrame(long)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: android.util.DisplayMetrics getWindowAreaDisplayMetrics()
io.sentry.SentryOptions: void setMaxDepth(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getActiveReader()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.window.extensions.core.util.function.Predicate: boolean test(java.lang.Object)
io.sentry.flutter.SentryFlutter$updateOptions$19: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.sentry.SentryOptions: io.sentry.ReplayController getReplayController()
io.sentry.SpanStatus: io.sentry.SpanStatus fromHttpStatusCode(java.lang.Integer,io.sentry.SpanStatus)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: java.lang.Object invoke(java.lang.Object)
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void release()
io.sentry.SentryOptions: void setTraceSampling(boolean)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void setClearCachedDataIntervalMs(int)
io.sentry.SentryOptions: java.lang.Double getTracesSampleRate()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
io.sentry.flutter.SentryFlutterReplayRecorder: void start$lambda$0(io.sentry.flutter.SentryFlutterReplayRecorder,java.lang.String,io.sentry.android.replay.ScreenshotRecorderConfig)
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendCallback getBeforeSend()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void removeRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.sentry.flutter.SentryFlutter$updateOptions$23: void invoke(long)
io.sentry.DataCategory: DataCategory(java.lang.String,int,java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
io.sentry.SentryOptions: java.util.Set getIgnoredExceptionsForType()
io.sentry.SentryOptions: void setSendClientReports(boolean)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
io.sentry.android.core.SentryAndroidOptions: void setBeforeScreenshotCaptureCallback(io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback)
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken valueOf(java.lang.String)
io.sentry.android.ndk.NativeScope: void nativeSetUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableRootCheck()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.sentry.SentryOptions: void setSentryClientName(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
io.flutter.view.TextureRegistry$SurfaceProducer: void setSize(int,int)
io.sentry.SentryOptions: io.sentry.protocol.SdkVersion getSdkVersion()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
io.sentry.SentryOptions: io.sentry.backpressure.IBackpressureMonitor getBackpressureMonitor()
io.sentry.flutter.SentryFlutter: void updateReplayOptions(io.sentry.SentryReplayOptions,java.util.Map)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableNetworkEventBreadcrumbs()
io.sentry.android.core.SentryAndroidOptions: void setReportHistoricalAnrs(boolean)
io.sentry.android.core.SentryPerformanceProvider: SentryPerformanceProvider()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
io.sentry.SentryOptions: void setDebugMetaLoader(io.sentry.internal.debugmeta.IDebugMetaLoader)
io.sentry.DataCategory: io.sentry.DataCategory valueOf(java.lang.String)
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.sentry.UncaughtExceptionHandlerIntegration: UncaughtExceptionHandlerIntegration()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
io.sentry.SentryOptions: int getProfilingTracesHz()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
io.sentry.flutter.R: R()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void prefetchUrl(java.lang.String,android.webkit.ValueCallback)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.sentry.android.core.SentryAndroidOptions: void setEnablePerformanceV2(boolean)
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode valueOf(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$3: SentryFlutter$updateOptions$3(io.sentry.android.core.SentryAndroidOptions)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
io.sentry.android.core.SentryAndroidOptions: void setEnableSystemEventBreadcrumbs(boolean)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void clearPrefetch(java.lang.String,android.webkit.ValueCallback)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.sentry.flutter.SentryFlutterPlugin: void captureEnvelope(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
io.sentry.Instrumenter: io.sentry.Instrumenter[] $values()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
io.sentry.SentryOptions: void setEnableSpanLocalMetricAggregation(boolean)
io.sentry.flutter.SentryFlutterPlugin: SentryFlutterPlugin()
io.flutter.embedding.engine.FlutterJNI: void scheduleFrame()
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.WebStorage getWebStorage()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
io.sentry.flutter.SentryFlutter$updateOptions$1: SentryFlutter$updateOptions$1(io.sentry.android.core.SentryAndroidOptions)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.sentry.flutter.SentryFlutterPlugin: void beginNativeFrames(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType valueOf(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: boolean isCollectAdditionalContext()
io.sentry.SentryOptions: void setSendDefaultPii(boolean)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: java.lang.String getVariationsHeader()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.ParcelFileDescriptor openFile(android.content.ContentProvider,android.net.Uri)
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
io.sentry.SentryOptions: boolean isEnableUserInteractionTracing()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
io.sentry.flutter.SentryFlutter$updateOptions$16: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryItemType: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
io.sentry.protocol.DebugImage: void setDebugFile(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader33()
io.sentry.SentryOptions: boolean isEnableSpanLocalMetricAggregation()
io.sentry.SentryOptions: java.util.List getTracePropagationTargets()
io.sentry.flutter.SentryFlutter$updateOptions$1: void invoke(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
io.sentry.flutter.SentryFlutter: boolean getAutoPerformanceTracingEnabled()
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType[] values()
io.sentry.SentryOptions: void merge(io.sentry.ExternalOptions)
io.sentry.android.core.SentryAndroidOptions: void setCollectAdditionalContext(boolean)
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode[] values()
io.sentry.SentryOptions: io.sentry.Dsn getParsedDsn()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
io.sentry.SpanStatus: SpanStatus(java.lang.String,int,int)
io.sentry.flutter.SentryFlutter$updateOptions$24: SentryFlutter$updateOptions$24(io.sentry.android.core.SentryAndroidOptions)
io.sentry.MeasurementUnit$Duration: MeasurementUnit$Duration(java.lang.String,int)
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType[] values()
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetHeight()
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] values()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
io.sentry.SentryOptions: void setAttachThreads(boolean)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getEnterpriseAuthenticationAppLinkPolicyEnabled()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
io.sentry.flutter.SentryFlutterPlugin: void loadImageList(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: android.graphics.SurfaceTexture surfaceTexture()
io.sentry.protocol.TransactionNameSource: TransactionNameSource(java.lang.String,int)
io.sentry.protocol.DebugImage: java.lang.String getDebugId()
com.example.app_movil.MainActivity: MainActivity()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.sentry.flutter.SentryFlutterPlugin$Companion: void setEventEnvironmentTag$default(io.sentry.flutter.SentryFlutterPlugin$Companion,io.sentry.SentryEvent,java.lang.String,java.lang.String,int,java.lang.Object)
io.sentry.SentryOptions: void setRelease(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus valueOf(java.lang.String)
io.sentry.SentryOptions: void setEnableUncaughtExceptionHandler(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
io.sentry.flutter.SentryFlutterReplayRecorder: SentryFlutterReplayRecorder(io.flutter.plugin.common.MethodChannel,io.sentry.android.replay.ReplayIntegration)
io.sentry.flutter.SentryFlutter$updateOptions$6: void invoke(boolean)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAppLifecycleBreadcrumbs()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType[] $values()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
io.sentry.protocol.DebugImage: java.util.Map getUnknown()
io.sentry.SentryOptions: io.sentry.IEnvelopeReader getEnvelopeReader()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
io.sentry.rrweb.RRWebEventType: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
io.sentry.SentryOptions: void setDateProvider(io.sentry.SentryDateProvider)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: android.view.View getView()
io.sentry.SentryOptions: java.util.Set getBundleIds()
io.sentry.SentryOptions: void addScopeObserver(io.sentry.IScopeObserver)
io.sentry.flutter.SentryFlutterPlugin: void displayRefreshRate(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims()
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
io.sentry.SentryOptions: void addEventProcessor(io.sentry.EventProcessor)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
io.sentry.protocol.DebugImage: java.lang.String getType()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImageReaders()
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus[] $values()
io.sentry.protocol.DebugImage: java.lang.String getCodeId()
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setAlgorithmicDarkeningAllowed(boolean)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
io.sentry.SentryOptions: int getMaxBreadcrumbs()
io.sentry.SentryOptions: void setEnableUserInteractionTracing(boolean)
io.sentry.SentryOptions: void setSessionFlushTimeoutMillis(long)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
io.sentry.flutter.SentryFlutterPlugin: void closeNativeSdk(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.SentryOptions: boolean isEnableUncaughtExceptionHandler()
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: void setPresentationView(android.view.View)
io.sentry.android.core.AppLifecycleIntegration: AppLifecycleIntegration()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getWebauthnSupport()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
io.sentry.SentryOptions: java.lang.Double getProfilesSampleRate()
io.sentry.SentryOptions: java.lang.String getDistinctId()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
io.sentry.SentryOptions: boolean isProfilingEnabled()
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
io.sentry.flutter.SentryFlutter$updateOptions$16: void invoke(boolean)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
io.sentry.protocol.DebugImage: void setArch(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$4: SentryFlutter$updateOptions$4(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions: io.sentry.ISerializer getSerializer()
io.sentry.SentryOptions: java.lang.String getCacheDirPath()
io.sentry.SentryOptions: long getShutdownTimeoutMillis()
io.sentry.SentryOptions: boolean isEnablePrettySerializationOutput()
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
io.sentry.android.core.SentryAndroidOptions: boolean isReportHistoricalAnrs()
io.flutter.view.TextureRegistry$SurfaceProducer: int getHeight()
io.sentry.hints.EventDropReason: io.sentry.hints.EventDropReason[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
io.sentry.SentryOptions: boolean isTracingEnabled()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableActivityLifecycleTracingAutoFinish()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: SentryFlutterPlugin$initNativeSdk$2$1()
io.sentry.android.core.EnvelopeFileObserverIntegration: EnvelopeFileObserverIntegration()
io.sentry.SentryOptions: void setExecutorService(io.sentry.ISentryExecutorService)
io.sentry.flutter.SentryFlutterPlugin$BeforeSendCallbackImpl: io.sentry.SentryEvent execute(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.SentryOptions: void addBundleId(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$8: java.lang.Object invoke(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
io.sentry.SentryOptions: void setMaxSpans(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.sentry.android.ndk.SentryNdk: void shutdown()
io.sentry.clientreport.DiscardReason: DiscardReason(java.lang.String,int,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
io.sentry.hints.EventDropReason: EventDropReason(java.lang.String,int)
io.sentry.SentryOptions: void setDebug(boolean)
io.sentry.SentryOptions: io.sentry.ISentryExecutorService getExecutorService()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id()
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType[] values()
io.sentry.SentryOptions: io.sentry.cache.IEnvelopeCache getEnvelopeDiskCache()
io.sentry.SentryOptions: java.lang.String getProfilingTracesDirPath()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
androidx.lifecycle.DefaultLifecycleObserver: void onStop(androidx.lifecycle.LifecycleOwner)
io.sentry.SentryLevel: io.sentry.SentryLevel[] $values()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
io.sentry.android.core.SentryAndroidOptions: void setEnableAppComponentBreadcrumbs(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void finalize()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
io.sentry.SentryOptions: void setLogger(io.sentry.ILogger)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$800(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason[] $values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.sentry.SentryOptions: void setProfilesSampler(io.sentry.SentryOptions$ProfilesSamplerCallback)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type[] $values()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
io.sentry.SentryOptions: void setTransportGate(io.sentry.transport.ITransportGate)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.sentry.SentryOptions: void setTransactionPerformanceCollector(io.sentry.TransactionPerformanceCollector)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void endRearDisplaySession()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
io.sentry.android.core.performance.AppStartMetrics$AppStartType: AppStartMetrics$AppStartType(java.lang.String,int)
io.sentry.SentryOptions: int getMaxSpans()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
io.sentry.android.core.SentryAndroidOptions: void setBeforeViewHierarchyCaptureCallback(io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback)
io.sentry.SentryOptions: boolean isAttachThreads()
io.sentry.flutter.SentryFlutter$updateOptions$24: void invoke(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getSpeculativeLoadingStatus()
io.sentry.SentryOptions: java.util.List getGestureTargetLocators()
io.sentry.android.core.SentryAndroidOptions: void setDebugImagesLoader(io.sentry.android.core.IDebugImagesLoader)
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: kotlin.Lazy access$getSnakecasePattern$delegate$cp()
io.sentry.SentryOptions: io.sentry.ITransportFactory getTransportFactory()
io.sentry.SentryReplayOptions$SentryReplayQuality: SentryReplayOptions$SentryReplayQuality(java.lang.String,int,float,int)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void startRearDisplaySession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
io.sentry.SentryOptions: void setServerName(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.sentry.flutter.SentryFlutterPlugin: void removeTag(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
io.sentry.android.core.SentryAndroidOptions: boolean isAttachAnrThreadDump()
io.sentry.flutter.SentryFlutterPlugin: void addReplayScreenshot(java.lang.String,java.lang.Long,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
io.sentry.SentryOptions: java.util.List getIgnoredCheckIns()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
io.sentry.android.core.SentryAndroidOptions: void setProfilingTracesIntervalMillis(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase[] values()
io.sentry.flutter.SentryFlutterPlugin: void setTag(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener getActiveFocusListener()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
io.sentry.android.ndk.NativeScope: void nativeSetExtra(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebChromeClient(android.webkit.WebChromeClient)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: byte[] getAsArrayBuffer()
io.sentry.protocol.DebugImage: void setCodeFile(java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
io.sentry.SentryOptions: boolean isDebug()
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax[] values()
io.sentry.SentryOptions: io.sentry.SentryOptions$RequestSize getMaxRequestBodySize()
io.sentry.Session$State: io.sentry.Session$State[] $values()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.sentry.SentryOptions: void setEnableTimeToFullDisplayTracing(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
io.sentry.SentryOptions: void setSessionTrackingIntervalMillis(long)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
io.sentry.flutter.SentryFlutterPlugin: io.flutter.plugin.common.MethodChannel access$getChannel$p(io.sentry.flutter.SentryFlutterPlugin)
io.sentry.flutter.SentryFlutterPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.sentry.SentryOptions: void setIgnoredCheckIns(java.util.List)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.sentry.SentryItemType: io.sentry.SentryItemType[] values()
io.sentry.SentryOptions: void setEnableExternalConfiguration(boolean)
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason[] values()
io.sentry.flutter.SentryFlutterPlugin: void setUser(java.util.Map,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.SentryAndroidOptions: int getProfilingTracesIntervalMillis()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: void setAnrEnabled(boolean)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
io.sentry.flutter.SentryFlutter$updateOptions$5: SentryFlutter$updateOptions$5(io.sentry.android.core.SentryAndroidOptions)
io.sentry.flutter.SentryFlutter$updateOptions$13: java.lang.Object invoke(java.lang.Object)
io.sentry.protocol.TransactionNameSource: java.lang.String apiName()
io.sentry.flutter.SentryFlutter$updateOptions$8: SentryFlutter$updateOptions$8(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromActivityForConfigChanges()
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType[] values()
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type[] $values()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
io.sentry.SentryOptions: void setCacheDirPath(java.lang.String)
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality[] $values()
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromActivity()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
io.sentry.flutter.SentryFlutterReplayRecorder: void start(io.sentry.android.replay.ScreenshotRecorderConfig)
kotlin.random.Random: Random()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: android.util.DisplayMetrics getRearDisplayMetrics()
io.sentry.flutter.SentryFlutterPlugin$Companion: void crash()
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType valueOf(java.lang.String)
io.sentry.SentryOptions: void addIntegration(io.sentry.Integration)
io.sentry.android.ndk.SentryNdk: void lambda$static$0()
io.sentry.flutter.SentryFlutter$updateOptions$7: void invoke(long)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setAttributionBehavior(int)
io.sentry.flutter.SentryFlutterPlugin$Companion: void access$setEventOriginTag(io.sentry.flutter.SentryFlutterPlugin$Companion,io.sentry.SentryEvent)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setProfile(java.lang.String)
io.sentry.android.ndk.NativeScope: void nativeSetTag(java.lang.String,java.lang.String)
io.sentry.SentryOptions: void setEnvironment(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: java.lang.String getNativeSdkName()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.GeolocationPermissions getGeoLocationPermissions()
io.flutter.view.TextureRegistry$ImageTextureEntry: void pushImage(android.media.Image)
io.sentry.SentryOptions: void setEnableAppStartProfiling(boolean)
io.sentry.SentryOptions: void setMaxQueueSize(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
androidx.core.graphics.drawable.IconCompat: IconCompat()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWebViewMediaIntegrityApiStatus(int,java.util.Map)
io.sentry.flutter.SentryFlutter$updateOptions$6: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryOptions: void setTracePropagationTargets(java.util.List)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$20: java.lang.Object invoke(java.lang.Object)
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
io.sentry.android.ndk.NativeScope: void nativeAddBreadcrumb(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableSystemEventBreadcrumbs()
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize[] $values()
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource[] $values()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
io.sentry.flutter.SentryFlutter$updateOptions$12: java.lang.Object invoke(java.lang.Object)
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType[] values()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableActivityLifecycleBreadcrumbs()
io.sentry.flutter.SentryFlutterReplayRecorder: void pause()
io.sentry.SentryOptions: void setBackpressureMonitor(io.sentry.backpressure.IBackpressureMonitor)
io.sentry.protocol.DebugImage: void setImageAddr(java.lang.String)
io.sentry.SentryOptions: io.sentry.Instrumenter getInstrumenter()
io.sentry.SentryOptions: java.lang.String getEnvironment()
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$12: SentryFlutter$updateOptions$12(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
io.sentry.flutter.SentryFlutter$updateOptions$15: SentryFlutter$updateOptions$15(io.sentry.android.core.SentryAndroidOptions)
androidx.core.view.ScrollingView: int computeVerticalScrollOffset()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableFramesTracking()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter$Companion: SentryFlutterReplayBreadcrumbConverter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.SentryOptions: void setDiagnosticLevel(io.sentry.SentryLevel)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
io.sentry.SentryLevel: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.ndk.SentryNdk: void close()
io.sentry.android.core.SentryAndroidOptions: void setAttachAnrThreadDump(boolean)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String getType(android.net.Uri)
io.sentry.protocol.Device$DeviceOrientation: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.flutter.SentryFlutterPlugin$Companion: void access$crash(io.sentry.flutter.SentryFlutterPlugin$Companion)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.sentry.flutter.SentryFlutter$updateOptions$7: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
io.sentry.SentryOptions: java.lang.String getCacheDirPathWithoutDsn()
io.sentry.SentryOptions: void setProxy(io.sentry.SentryOptions$Proxy)
io.sentry.SentryOptions: io.sentry.internal.modules.IModulesLoader getModulesLoader()
io.sentry.flutter.SentryFlutter$updateOptions$27: SentryFlutter$updateOptions$27(io.sentry.flutter.SentryFlutter,io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions: void setEnableScopePersistence(boolean)
org.chromium.support_lib_boundary.PrefetchParamsBoundaryInterface: java.util.Map getAdditionalHeaders()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type valueOf(java.lang.String)
io.sentry.protocol.DebugImage: void setUuid(java.lang.String)
io.sentry.SpanStatus: io.sentry.SpanStatus[] $values()
io.sentry.protocol.DebugImage: DebugImage()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.sentry.SentryOptions: boolean isEnabled()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void waitOnFence(android.media.Image)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
io.sentry.ShutdownHookIntegration: ShutdownHookIntegration()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void release()
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler getMessagePayload()
io.sentry.flutter.SentryFlutter$updateOptions$19: void invoke(boolean)
io.sentry.SentryOptions: void setGestureTargetLocators(java.util.List)
io.sentry.SentryOptions: int getMaxCacheItems()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
io.sentry.flutter.SentryFlutter$updateOptions$11: void invoke(boolean)
io.sentry.flutter.SentryFlutter$updateOptions$11: SentryFlutter$updateOptions$11(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions: java.lang.String getSpotlightConnectionUrl()
io.sentry.SpotlightIntegration: SpotlightIntegration()
io.sentry.protocol.DebugImage: void setType(java.lang.String)
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeEnvelopeCallback getBeforeEnvelopeCallback()
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback getBeforeViewHierarchyCaptureCallback()
io.sentry.protocol.DebugImage: java.lang.String access$202(io.sentry.protocol.DebugImage,java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource valueOf(java.lang.String)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.sentry.SpanStatus: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: SentryFlutterReplayBreadcrumbConverter()
io.sentry.android.core.SentryAndroidOptions: boolean isAttachViewHierarchy()
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.sentry.flutter.SentryFlutter$updateOptions$5: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
io.sentry.flutter.SentryFlutter$updateOptions$11: java.lang.Object invoke(java.lang.Object)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: boolean isAudioMuted()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
io.sentry.flutter.SentryFlutter$updateOptions$13: void invoke(int)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: RRWebIncrementalSnapshotEvent$IncrementalSource(java.lang.String,int)
io.sentry.android.core.SentryAndroidOptions: boolean isEnablePerformanceV2()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
io.sentry.flutter.SentryFlutter$updateOptions$25: void invoke(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
io.sentry.SentryOptions: int getMaxQueueSize()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void loadContexts(io.flutter.plugin.common.MethodChannel$Result)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getBackForwardCacheEnabled()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendTransactionCallback getBeforeSendTransaction()
io.sentry.protocol.DebugImage: java.lang.String getArch()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void maybeWaitOnFence(android.media.Image)
io.sentry.flutter.SentryFlutterReplayRecorder: void stop()
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality[] values()
io.flutter.view.TextureRegistry$SurfaceProducer: void release()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.lifecycle.DefaultLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getDropDataProvider()
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: io.sentry.rrweb.RRWebEvent convertNetworkBreadcrumb(io.sentry.Breadcrumb)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
io.sentry.flutter.SentryFlutter$updateOptions$10: void invoke(boolean)
io.sentry.protocol.DebugImage: java.lang.Long access$702(io.sentry.protocol.DebugImage,java.lang.Long)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax valueOf(java.lang.String)
io.sentry.SpanStatus: boolean matches(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
io.sentry.SentryOptions: void setEnableScreenTracking(boolean)
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
io.sentry.SentryOptions: void setEnableUserInteractionBreadcrumbs(boolean)
io.sentry.SentryOptions: java.util.List getTracingOrigins()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.sentry.SentryOptions: io.sentry.SentryOptions$Proxy getProxy()
io.sentry.SentryOptions: void addOptionsObserver(io.sentry.IOptionsObserver)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
io.sentry.flutter.SentryFlutterPlugin: void captureReplay(java.lang.Boolean,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: android.content.Context getPresentationContext()
io.sentry.SentryOptions: void setMaxAttachmentSize(long)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
io.sentry.flutter.SentryFlutter$updateOptions$15: void invoke(boolean)
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
androidx.core.view.ScrollingView: int computeVerticalScrollRange()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
io.sentry.flutter.SentryFlutter$updateOptions$3: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryOptions: io.sentry.TransactionPerformanceCollector getTransactionPerformanceCollector()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
io.sentry.rrweb.RRWebEventType: RRWebEventType(java.lang.String,int)
io.sentry.protocol.DebugImage: java.lang.String access$602(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$25: SentryFlutter$updateOptions$25(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getWidth()
io.flutter.view.TextureRegistry$SurfaceProducer: int getWidth()
io.sentry.SentryOptions: void addInAppInclude(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: RRWebInteractionEvent$InteractionType(java.lang.String,int)
io.sentry.flutter.SentryFlutterPlugin: void initNativeSdk(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAppComponentBreadcrumbs()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
io.sentry.protocol.DebugImage: java.lang.String access$002(io.sentry.protocol.DebugImage,java.lang.String)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
io.sentry.flutter.SentryFlutter$updateOptions$17: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryOptions: void setReadTimeoutMillis(int)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: SentryGestureListener$GestureType(java.lang.String,int)
io.sentry.SentryOptions: void setMainThreadChecker(io.sentry.util.thread.IMainThreadChecker)
io.sentry.protocol.DebugImage: void setImageSize(java.lang.Long)
io.flutter.view.TextureRegistry$SurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
io.sentry.SpanStatus: io.sentry.SpanStatus[] values()
io.sentry.SentryOptions: long getMaxTraceFileSize()
io.sentry.SentryOptions: void setTraceOptionsRequests(boolean)
io.sentry.android.core.SentryAndroidOptions: void setEnableRootCheck(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
io.sentry.protocol.DebugImage: java.lang.String access$802(io.sentry.protocol.DebugImage,java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
io.sentry.protocol.Device$DeviceOrientation: Device$DeviceOrientation(java.lang.String,int)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.sentry.SentryOptions: void setTracingOrigins(java.util.List)
io.sentry.android.core.SentryAndroidOptions: void setAttachViewHierarchy(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getAttributionBehavior()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.sentry.SentryOptions: void setProguardUuid(java.lang.String)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
io.sentry.android.ndk.SentryNdk: SentryNdk()
io.sentry.SentryOptions: void setTransactionProfiler(io.sentry.ITransactionProfiler)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void disableFenceForTest()
io.flutter.view.TextureRegistry$SurfaceProducer: void scheduleFrame()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
io.sentry.SentryOptions: java.util.List getIntegrations()
io.sentry.SentryReplayEvent$ReplayType: SentryReplayEvent$ReplayType(java.lang.String,int)
io.sentry.SentryOptions: void setMaxRequestBodySize(io.sentry.SentryOptions$RequestSize)
io.sentry.flutter.SentryFlutterPlugin: void setExtra(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.SentryOptions: boolean isSendClientReports()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
io.sentry.android.ndk.SentryNdk: void init(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions: void setEnableMetrics(boolean)
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: java.lang.String getTouchPathMessage(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader29()
io.sentry.SentryOptions: void setEnableShutdownHook(boolean)
io.sentry.flutter.SentryFlutterPlugin: void clearBreadcrumbs(io.flutter.plugin.common.MethodChannel$Result)
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface: java.util.List getCookieInfo(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.sentry.flutter.SentryFlutterPlugin: void removeContexts$lambda$7(java.lang.String,io.flutter.plugin.common.MethodChannel$Result,io.sentry.IScope)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
io.sentry.android.core.SentryAndroidOptions: void setAnrTimeoutIntervalMillis(long)
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetWidth()
androidx.tracing.TraceApi29Impl: boolean isEnabled()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason valueOf(java.lang.String)
io.sentry.SpanStatus: io.sentry.SpanStatus fromHttpStatusCode(int)
io.sentry.SentryOptions: java.lang.String getServerName()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: boolean onCreate()
io.sentry.SentryOptions: void setAttachServerName(boolean)
io.sentry.android.core.SentryAndroidOptions: void setNativeSdkName(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
io.sentry.SentryOptions: boolean containsIgnoredExceptionForType(java.lang.Throwable)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebViewClient(android.webkit.WebViewClient)
io.sentry.SentryOptions: java.util.Map getTags()
io.sentry.flutter.SentryFlutterPlugin$Companion: void addPackages(io.sentry.SentryEvent,io.sentry.protocol.SdkVersion)
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: io.sentry.rrweb.RRWebEvent convert(io.sentry.Breadcrumb)
io.sentry.SentryOptions: java.lang.String getDist()
io.sentry.SentryOptions: void addPerformanceCollector(io.sentry.IPerformanceCollector)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
io.sentry.android.ndk.NativeScope: void nativeRemoveExtra(java.lang.String)
io.sentry.SentryOptions: java.lang.String getOutboxPath()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
io.sentry.SentryOptions: void setTransportFactory(io.sentry.ITransportFactory)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: java.lang.Object invoke()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImages()
io.sentry.SentryOptions: void addContextTag(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: void setEnableActivityLifecycleBreadcrumbs(boolean)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
io.sentry.SentryOptions: boolean isEnableScreenTracking()
io.sentry.flutter.SentryFlutter$updateOptions$27: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$21: java.lang.Object invoke(java.lang.Object)
io.sentry.android.core.SentryAndroidOptions: io.sentry.protocol.SdkVersion createSdkVersion()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean isAlgorithmicDarkeningAllowed()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Map getWebViewMediaIntegrityApiOverrideRules()
io.sentry.flutter.SentryFlutter$updateOptions$20: void invoke(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.internal.util.SentryFrameMetricsCollector getFrameMetricsCollector()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image acquireLatestImage()
kotlin.jvm.internal.Lambda: int getArity()
io.sentry.flutter.SentryFlutter$updateOptions$9: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.sentry.SentryOptions: boolean isEnableAppStartProfiling()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.webkit.WebViewClientCompat: WebViewClientCompat()
io.sentry.SentryOptions: void setShutdownTimeout(long)
io.sentry.SpanStatus: SpanStatus(java.lang.String,int,int,int)
androidx.core.view.ScrollingView: int computeHorizontalScrollRange()
io.sentry.flutter.SentryFlutter$updateOptions$21: SentryFlutter$updateOptions$21(io.sentry.flutter.SentryFlutter)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableScopeSync()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
io.sentry.flutter.SentryFlutter$updateOptions$9: void invoke(boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
io.flutter.view.TextureRegistry$ImageTextureEntry: void release()
io.sentry.SentryOptions: boolean isAttachServerName()
io.sentry.flutter.SentryFlutter$updateOptions$22: void invoke(boolean)
io.sentry.flutter.SentryFlutterPlugin: void endNativeFrames(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.window.layout.adapter.sidecar.SidecarCompat: void setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void prefetchUrl(java.lang.String,java.lang.reflect.InvocationHandler,android.webkit.ValueCallback)
io.sentry.SentryOptions: io.sentry.SentryLevel getDiagnosticLevel()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean shouldUpdate()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
io.sentry.flutter.SentryFlutterReplayRecorder: void close()
io.sentry.SentryOptions: void setMaxCacheItems(int)
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface: void remove()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.sentry.android.core.SentryAndroidOptions: boolean isAttachScreenshot()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.startup.InitializationProvider: InitializationProvider()
io.sentry.protocol.DebugImage: java.lang.String access$102(io.sentry.protocol.DebugImage,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder[] values()
io.sentry.SentryOptions: long getShutdownTimeout()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality valueOf(java.lang.String)
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType valueOf(java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode[] values()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSpeculativeLoadingStatus(int)
io.sentry.Instrumenter: io.sentry.Instrumenter[] values()
io.sentry.SentryOptions: boolean isEnableExternalConfiguration()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
io.sentry.SentryOptions: java.lang.String getProguardUuid()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
io.sentry.SentryOptions: java.util.List getContextTags()
io.sentry.SentryOptions: io.sentry.IConnectionStatusProvider getConnectionStatusProvider()
io.sentry.SentryItemType: io.sentry.SentryItemType valueOf(java.lang.String)
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken[] $values()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
io.sentry.SentryItemType: java.lang.String getItemType()
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
io.sentry.Instrumenter: io.sentry.Instrumenter valueOf(java.lang.String)
io.sentry.SentryOptions: void setSslSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken[] values()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
io.sentry.flutter.SentryFlutter$updateOptions$4: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
io.sentry.SentryOptions: java.util.List getEventProcessors()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.sentry.flutter.SentryFlutterPlugin: void fetchNativeAppStart(io.flutter.plugin.common.MethodChannel$Result)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void removeRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
io.sentry.android.core.SentryAndroidOptions: void setAnrReportInDebug(boolean)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type[] values()
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
io.sentry.SentryOptions: java.util.List getInAppExcludes()
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation valueOf(java.lang.String)
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType valueOf(java.lang.String)
io.flutter.view.TextureRegistry$SurfaceProducer: android.view.Surface getSurface()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
io.sentry.SentryOptions: java.lang.String getDsn()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType[] values()
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
io.sentry.flutter.SentryFlutter$updateOptions$14: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
io.sentry.SentryOptions: void setEnableBackpressureHandling(boolean)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void addRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void finalize()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterImageTexture(long,long,java.lang.ref.WeakReference)
io.sentry.SentryOptions: void setTracesSampleRate(java.lang.Double)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setBackForwardCacheEnabled(boolean)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.sentry.SentryOptions: void setDsn(java.lang.String)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onDestroy(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAutoActivityLifecycleTracing()
androidx.core.view.ScrollingView: int computeVerticalScrollExtent()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
io.sentry.flutter.SentryFlutter$updateOptions$23: SentryFlutter$updateOptions$23(io.sentry.android.core.SentryAndroidOptions)
io.flutter.view.TextureRegistry$ImageConsumer: android.media.Image acquireLatestImage()
androidx.lifecycle.DefaultLifecycleObserver: void onPause(androidx.lifecycle.LifecycleOwner)
io.sentry.flutter.SentryFlutterPlugin$BeforeSendCallbackImpl: SentryFlutterPlugin$BeforeSendCallbackImpl(io.sentry.protocol.SdkVersion)
io.sentry.SentryOptions: io.sentry.SentryOptions empty()
io.sentry.flutter.SentryFlutter$updateOptions$14: void invoke(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.sentry.protocol.DebugImage: void setUnknown(java.util.Map)
io.sentry.SentryOptions: void setShutdownTimeoutMillis(long)
io.sentry.flutter.SentryFlutter$updateOptions$2: SentryFlutter$updateOptions$2(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.FlutterJNI: float getScaledFontSize(float,int)
io.sentry.hints.EventDropReason: io.sentry.hints.EventDropReason valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
io.sentry.flutter.SentryFlutterPlugin$Companion: void access$addPackages(io.sentry.flutter.SentryFlutterPlugin$Companion,io.sentry.SentryEvent,io.sentry.protocol.SdkVersion)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.sentry.flutter.SentryFlutter$updateOptions$26: SentryFlutter$updateOptions$26(io.sentry.android.core.SentryAndroidOptions)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setAudioMuted(boolean)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: int getWindowAreaStatus()
io.sentry.SentryOptions: io.sentry.ITransactionProfiler getTransactionProfiler()
io.sentry.flutter.SentryFlutter$updateOptions$21: void invoke(boolean)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void cancelPrefetch(java.lang.String)
io.sentry.protocol.DebugImage: void setImageSize(long)
io.sentry.android.core.SentryAndroidOptions: boolean isAnrReportInDebug()
io.sentry.SentryOptions: javax.net.ssl.SSLSocketFactory getSslSocketFactory()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
io.sentry.SentryOptions: boolean isPrintUncaughtStackTrace()
io.sentry.SentryOptions: void addIgnoredExceptionForType(java.lang.Class)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: long id()
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
io.sentry.android.ndk.NativeScope: void nativeRemoveTag(java.lang.String)
io.sentry.SentryOptions: void setSdkVersion(io.sentry.protocol.SdkVersion)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: java.lang.String getName()
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize valueOf(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: long getAnrTimeoutIntervalMillis()
io.sentry.SentryOptions: io.sentry.util.thread.IMainThreadChecker getMainThreadChecker()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
io.sentry.android.core.SentryAndroidOptions: SentryAndroidOptions()
io.sentry.SentryOptions$RequestSize: SentryOptions$RequestSize(java.lang.String,int)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.sentry.SentryOptions: void setAttachStacktrace(boolean)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onPause(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
io.sentry.SentryOptions: io.sentry.SentryOptions$ProfilesSamplerCallback getProfilesSampler()
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType valueOf(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$2: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
io.sentry.SentryOptions: int getReadTimeoutMillis()
io.sentry.internal.gestures.UiElement$Type: UiElement$Type(java.lang.String,int)
io.sentry.flutter.SentryFlutter$updateOptions$24: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.sentry.protocol.DebugImage: java.lang.String getImageAddr()
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onStop(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.sentry.SentryOptions: void setSampleRate(java.lang.Double)
io.sentry.flutter.SentryFlutterReplayRecorder: void pause$lambda$2(io.sentry.flutter.SentryFlutterReplayRecorder)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
io.sentry.protocol.DebugImage: java.lang.Long getImageSize()
io.sentry.SentryOptions: java.util.List getScopeObservers()
io.sentry.flutter.SentryFlutter$updateOptions$18: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
io.sentry.android.core.SentryAndroidOptions: void setEnableNetworkEventBreadcrumbs(boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getProfile()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
io.sentry.flutter.SentryFlutter$updateOptions$16: SentryFlutter$updateOptions$16(io.sentry.android.core.SentryAndroidOptions)
io.sentry.MeasurementUnit$Duration: java.lang.String apiName()
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onResume(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.Image acquireLatestImage()
io.sentry.SentryOptions: long getMaxAttachmentSize()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader access$700(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: double doubleTimestamp(java.util.Date)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Map getUserAgentMetadataMap()
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
io.sentry.SentryOptions: boolean isEnableScopePersistence()
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void scheduleFrame()
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: androidx.window.extensions.area.ExtensionWindowAreaPresentation getRearDisplayPresentation()
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
io.sentry.SentryOptions: java.lang.String getRelease()
io.sentry.SentryOptions: boolean isTraceOptionsRequests()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
io.sentry.SentryOptions: void setMaxBreadcrumbs(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
io.sentry.SentryOptions: void setCron(io.sentry.SentryOptions$Cron)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onTrimMemory(int)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
io.sentry.SentryOptions: io.sentry.SentryOptions$Cron getCron()
io.sentry.SentryOptions: void setReplayController(io.sentry.ReplayController)
io.sentry.SentryLevel: SentryLevel(java.lang.String,int)
io.sentry.flutter.SentryFlutter: void updateOptions(io.sentry.android.core.SentryAndroidOptions,java.util.Map)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.sentry.SentryOptions: void setBeforeSendTransaction(io.sentry.SentryOptions$BeforeSendTransactionCallback)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
io.sentry.SentryOptions: int getMaxDepth()
io.sentry.SentryOptions: void setEnabled(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
io.sentry.SentryOptions: io.sentry.ILogger getLogger()
io.sentry.flutter.SentryFlutter$updateOptions$10: java.lang.Object invoke(java.lang.Object)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: java.lang.Boolean invoke(io.sentry.Integration)
io.sentry.SpanStatus: io.sentry.SpanStatus valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
io.sentry.SentryOptions: boolean isEnableShutdownHook()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.sentry.SentryOptions: void setConnectionTimeoutMillis(int)
io.sentry.SentryOptions: void setEnablePrettySerializationOutput(boolean)
io.sentry.protocol.DebugImage: void setDebugId(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType[] $values()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
io.sentry.SentryItemType: SentryItemType(java.lang.String,int,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
io.sentry.SentryOptions: void setIdleTimeout(java.lang.Long)
io.sentry.SentryOptions: long getFlushTimeoutMillis()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation[] $values()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
io.sentry.SentryItemType: io.sentry.SentryItemType valueOfLabel(java.lang.String)
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: java.lang.reflect.InvocationHandler getProfile(java.lang.String)
io.sentry.protocol.DebugImage: java.lang.String getCodeFile()
io.sentry.SentryOptions: void setProfilingEnabled(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
io.sentry.SentryOptions: void setProfilingTracesHz(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
io.sentry.Instrumenter: Instrumenter(java.lang.String,int)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
io.sentry.IConnectionStatusProvider$ConnectionStatus: IConnectionStatusProvider$ConnectionStatus(java.lang.String,int)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void pruneImageReaderQueue()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
io.sentry.protocol.DebugImage: java.lang.String getDebugFile()
io.sentry.flutter.SentryFlutterPlugin$Companion: void setEventOriginTag(io.sentry.SentryEvent)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getOrCreatePerImageReader(android.media.ImageReader)
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection valueOf(java.lang.String)
io.sentry.SentryOptions: void setEnableSpotlight(boolean)
io.sentry.SentryOptions: void setEnvelopeDiskCache(io.sentry.cache.IEnvelopeCache)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void pushImage(android.media.Image)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
io.sentry.flutter.SentryFlutter$updateOptions$5: void invoke(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
io.sentry.flutter.SentryFlutter$updateOptions$10: SentryFlutter$updateOptions$10(io.sentry.android.core.SentryAndroidOptions)
io.flutter.plugins.webviewflutter.JavaScriptChannel: void postMessage(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void maybeWaitOnFence(android.media.Image)
